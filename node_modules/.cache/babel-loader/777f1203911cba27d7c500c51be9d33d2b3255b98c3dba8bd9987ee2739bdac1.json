{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const login = createAsyncThunk('auth/login', async credentials => {\n  // Firebase authentication will be implemented here\n  return {};\n});\nexport const register = createAsyncThunk('auth/register', async userData => {\n  // Firebase registration will be implemented here\n  return {};\n});\nexport const resetPassword = createAsyncThunk('auth/resetPassword', async email => {\n  // Firebase password reset will be implemented here\n  return {};\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: null,\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    logout: state => {\n      state.user = null;\n      state.status = 'idle';\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(login.pending, state => {\n      state.status = 'loading';\n    }).addCase(login.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.user = action.payload;\n      state.error = null;\n    }).addCase(login.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(register.pending, state => {\n      state.status = 'loading';\n    }).addCase(register.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.user = action.payload;\n      state.error = null;\n    }).addCase(register.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","login","credentials","register","userData","resetPassword","email","authSlice","name","initialState","user","status","error","reducers","logout","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","message","actions","reducer"],"sources":["/Users/ummualtin/Desktop/ProjeKitap/src/store/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const login = createAsyncThunk(\n  'auth/login',\n  async (credentials) => {\n    // Firebase authentication will be implemented here\n    return {};\n  }\n);\n\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (userData) => {\n    // Firebase registration will be implemented here\n    return {};\n  }\n);\n\nexport const resetPassword = createAsyncThunk(\n  'auth/resetPassword',\n  async (email) => {\n    // Firebase password reset will be implemented here\n    return {};\n  }\n);\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: null,\n    status: 'idle',\n    error: null,\n  },\n  reducers: {\n    logout: (state) => {\n      state.user = null;\n      state.status = 'idle';\n      state.error = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(login.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.user = action.payload;\n        state.error = null;\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n      })\n      .addCase(register.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(register.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.user = action.payload;\n        state.error = null;\n      })\n      .addCase(register.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport const { logout } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,KAAK,GAAGD,gBAAgB,CACnC,YAAY,EACZ,MAAOE,WAAW,IAAK;EACrB;EACA,OAAO,CAAC,CAAC;AACX,CACF,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGH,gBAAgB,CACtC,eAAe,EACf,MAAOI,QAAQ,IAAK;EAClB;EACA,OAAO,CAAC,CAAC;AACX,CACF,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGL,gBAAgB,CAC3C,oBAAoB,EACpB,MAAOM,KAAK,IAAK;EACf;EACA,OAAO,CAAC,CAAC;AACX,CACF,CAAC;AAED,MAAMC,SAAS,GAAGR,WAAW,CAAC;EAC5BS,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,IAAI,EAAE,IAAI;IACVC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,MAAM,EAAGC,KAAK,IAAK;MACjBA,KAAK,CAACL,IAAI,GAAG,IAAI;MACjBK,KAAK,CAACJ,MAAM,GAAG,MAAM;MACrBI,KAAK,CAACH,KAAK,GAAG,IAAI;IACpB;EACF,CAAC;EACDI,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACjB,KAAK,CAACkB,OAAO,EAAGJ,KAAK,IAAK;MACjCA,KAAK,CAACJ,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDO,OAAO,CAACjB,KAAK,CAACmB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC3CN,KAAK,CAACJ,MAAM,GAAG,WAAW;MAC1BI,KAAK,CAACL,IAAI,GAAGW,MAAM,CAACC,OAAO;MAC3BP,KAAK,CAACH,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDM,OAAO,CAACjB,KAAK,CAACsB,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MAC1CN,KAAK,CAACJ,MAAM,GAAG,QAAQ;MACvBI,KAAK,CAACH,KAAK,GAAGS,MAAM,CAACT,KAAK,CAACY,OAAO;IACpC,CAAC,CAAC,CACDN,OAAO,CAACf,QAAQ,CAACgB,OAAO,EAAGJ,KAAK,IAAK;MACpCA,KAAK,CAACJ,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDO,OAAO,CAACf,QAAQ,CAACiB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC9CN,KAAK,CAACJ,MAAM,GAAG,WAAW;MAC1BI,KAAK,CAACL,IAAI,GAAGW,MAAM,CAACC,OAAO;MAC3BP,KAAK,CAACH,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDM,OAAO,CAACf,QAAQ,CAACoB,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MAC7CN,KAAK,CAACJ,MAAM,GAAG,QAAQ;MACvBI,KAAK,CAACH,KAAK,GAAGS,MAAM,CAACT,KAAK,CAACY,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEV;AAAO,CAAC,GAAGP,SAAS,CAACkB,OAAO;AAC3C,eAAelB,SAAS,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}